{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\Projects\\\\React-native\\\\SearchBird\\\\screens\\\\Signup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Firebase from \"../config/firebaseconfig\";\n\nvar Signup = function (_React$Component) {\n  _inherits(Signup, _React$Component);\n\n  var _super = _createSuper(Signup);\n\n  function Signup() {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      errmsg: ''\n    };\n\n    _this.handleSignUp = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      Firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n        return _this.props.navigation.navigate('Profile');\n      }).catch(function (error) {\n        var err = error.toString().replace('Error: ', '');\n\n        _this.setState({\n          errmsg: err\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.name,\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        placeholder: \"Full Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        placeholder: \"Email\",\n        autoCapitalize: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputBox,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.err,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, this.state.errmsg), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.handleSignUp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"Signup\")));\n    }\n  }]);\n\n  return Signup;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputBox: {\n    width: '85%',\n    margin: 10,\n    padding: 15,\n    fontSize: 16,\n    borderColor: '#d3d3d3',\n    borderBottomWidth: 1,\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: 30,\n    marginBottom: 20,\n    paddingVertical: 5,\n    alignItems: 'center',\n    backgroundColor: '#FFA611',\n    borderColor: '#FFA611',\n    borderWidth: 1,\n    borderRadius: 5,\n    width: 200\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  buttonSignup: {\n    fontSize: 12\n  },\n  err: {\n    color: 'red',\n    marginTop: 10,\n    fontWeight: 'bold'\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/kumar/Desktop/Projects/React-native/SearchBird/screens/Signup.js"],"names":["React","Firebase","Signup","state","name","email","password","errmsg","handleSignUp","auth","createUserWithEmailAndPassword","then","props","navigation","navigate","catch","error","err","toString","replace","setState","styles","container","inputBox","button","buttonText","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","margin","padding","fontSize","borderColor","borderBottomWidth","textAlign","marginTop","marginBottom","paddingVertical","borderWidth","borderRadius","fontWeight","color","buttonSignup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, TextInput, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\nimport Firebase from '../config/firebaseconfig';\r\n\r\nclass Signup extends React.Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        errmsg: ''\r\n    }\r\n\r\n    handleSignUp = () => {\r\n        const { email, password } = this.state\r\n        Firebase.auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(() => this.props.navigation.navigate('Profile'))\r\n            .catch(error => {\r\n                let err = error.toString().replace('Error: ','')\r\n                this.setState({ errmsg: err })\r\n                //console.log(error.toString().replace('Error: ',''))\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={this.state.name}\r\n                    onChangeText={name => this.setState({ name })}\r\n                    placeholder='Full Name'\r\n                />\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={this.state.email}\r\n                    onChangeText={email => this.setState({ email })}\r\n                    placeholder='Email'\r\n                    autoCapitalize='none'\r\n                />\r\n                <TextInput\r\n                    style={styles.inputBox}\r\n                    value={this.state.password}\r\n                    onChangeText={password => this.setState({ password })}\r\n                    placeholder='Password'\r\n                    secureTextEntry={true}\r\n                />\r\n                <Text style={styles.err}>{this.state.errmsg}</Text>\r\n                <TouchableOpacity style={styles.button} onPress={this.handleSignUp}>\r\n                    <Text style={styles.buttonText}>Signup</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    inputBox: {\r\n        width: '85%',\r\n        margin: 10,\r\n        padding: 15,\r\n        fontSize: 16,\r\n        borderColor: '#d3d3d3',\r\n        borderBottomWidth: 1,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        marginTop: 30,\r\n        marginBottom: 20,\r\n        paddingVertical: 5,\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFA611',\r\n        borderColor: '#FFA611',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n        width: 200\r\n    },\r\n    buttonText: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff'\r\n    },\r\n    buttonSignup: {\r\n        fontSize: 12\r\n    },\r\n    err:{\r\n        color:'red',\r\n        marginTop:10,\r\n        fontWeight: 'bold'\r\n    }\r\n})\r\n\r\nexport default Signup"]},"metadata":{},"sourceType":"module"}