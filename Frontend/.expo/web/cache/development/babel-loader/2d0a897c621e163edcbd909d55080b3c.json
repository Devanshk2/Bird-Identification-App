{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\kumar\\\\Desktop\\\\Projects\\\\React-native\\\\SearchBird\\\\screens\\\\Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Firebase from \"../config/firebaseconfig\";\nimport * as ImagePicker from 'expo-image-picker';\n\nvar Profile = function (_React$Component) {\n  _inherits(Profile, _React$Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image_src: ''\n    };\n\n    _this.handleSignout = function () {\n      Firebase.auth().signOut();\n\n      _this.props.navigation.navigate('Login');\n    };\n\n    _this.deleteUser = function () {\n      var user = Firebase.auth().currentUser;\n      user.delete().then(function () {\n        _this.props.navigation.navigate('Login');\n      }).catch(function (error) {\n        console.log('this is the error');\n      });\n    };\n\n    _this.writeUserData = function () {\n      var userId = Firebase.auth().currentUser.uid;\n      Firebase.database().ref('users/' + userId).set({\n        username: 'Saur',\n        email: 'email'\n      });\n    };\n\n    _this.onClickImagePress = function _callee() {\n      var result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n            case 2:\n              result = _context.sent;\n\n              if (!result.cancelled) {}\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.onChooseImagePress = function _callee2() {\n      var result, localUri, filename, match, type, formData, response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n            case 2:\n              result = _context2.sent;\n\n              if (result.cancelled) {\n                _context2.next = 14;\n                break;\n              }\n\n              localUri = result.uri;\n              filename = localUri.split('/').pop();\n\n              _this.setState({\n                image_src: result.uri\n              });\n\n              match = /\\.(\\w+)$/.exec(filename);\n              type = match ? \"image/\" + match[1] : \"image\";\n              formData = new FormData();\n              formData.append('photo', {\n                uri: localUri,\n                name: filename,\n                type: type\n              });\n              _context2.next = 13;\n              return _regeneratorRuntime.awrap(fetch('http://127.0.0.1:8000', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              }));\n\n            case 13:\n              response = _context2.sent;\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: this.state.image_src\n        },\n        style: {\n          width: 400,\n          height: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.buttontext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        style: styles.btndes,\n        title: \"Capture\",\n        onPress: this.onClickImagePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.buttontext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Choose from Gallery\",\n        onPress: this.onChooseImagePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: styles.buttontext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.handleSignout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Profile;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  button: {\n    flexDirection: 'row',\n    padding: 10\n  },\n  buttontext: {\n    marginHorizontal: 10\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/kumar/Desktop/Projects/React-native/SearchBird/screens/Profile.js"],"names":["React","Firebase","ImagePicker","Profile","state","image_src","handleSignout","auth","signOut","props","navigation","navigate","deleteUser","user","currentUser","delete","then","catch","error","console","log","writeUserData","userId","uid","database","ref","set","username","email","onClickImagePress","launchCameraAsync","result","cancelled","onChooseImagePress","launchImageLibraryAsync","localUri","uri","filename","split","pop","setState","match","exec","type","formData","FormData","append","name","fetch","method","body","headers","response","styles","container","width","height","button","buttontext","btndes","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","padding","marginHorizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Button, Alert, Image } from 'react-native';\r\nimport Firebase from '../config/firebaseconfig';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nclass Profile extends React.Component {\r\n\r\n    state = {\r\n        image_src: ''\r\n    }\r\n\r\n    handleSignout = () => {\r\n        Firebase.auth().signOut()\r\n        this.props.navigation.navigate('Login')\r\n    }\r\n\r\n    deleteUser = () => {\r\n        var user = Firebase.auth().currentUser;\r\n        user.delete().then(() => {\r\n            this.props.navigation.navigate('Login')\r\n        }).catch(function (error) {\r\n            console.log('this is the error')\r\n        });\r\n    }\r\n\r\n    writeUserData = () => {\r\n        var userId = Firebase.auth().currentUser.uid;\r\n        Firebase.database().ref('users/' + userId).set({\r\n            username: 'Saur',\r\n            email: 'email'\r\n        });\r\n    }\r\n\r\n    onClickImagePress = async () => {\r\n        let result = await ImagePicker.launchCameraAsync();\r\n\r\n        if (!result.cancelled) {\r\n\r\n            // this.uploadImage(result.uri, \"test-image\")\r\n            //     .then(() => {\r\n            //         Alert.alert(\"Success\");\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         Alert.alert('error');\r\n            //     });\r\n        }\r\n    }\r\n\r\n    onChooseImagePress = async () => {\r\n\r\n        let result = await ImagePicker.launchImageLibraryAsync();\r\n\r\n        if (!result.cancelled) {\r\n            let localUri = result.uri;\r\n            let filename = localUri.split('/').pop();\r\n\r\n            this.setState({ image_src: result.uri })\r\n            let match = /\\.(\\w+)$/.exec(filename);\r\n            let type = match ? `image/${match[1]}` : `image`;\r\n\r\n            // Upload the image using the fetch and FormData APIs\r\n            let formData = new FormData();\r\n            // Assume \"photo\" is the name of the form field the server expects\r\n            formData.append('photo', { uri: localUri, name: filename, type });\r\n\r\n            const response = await fetch('http://127.0.0.1:8000', {\r\n                method: 'POST',\r\n                body: formData,\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                },\r\n            });\r\n            // this.uploadImage(result.uri, `test-image`)\r\n            //     .then(() => {\r\n            //         Alert.alert(\"Success\");\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         Alert.alert('error');\r\n            //     });\r\n        }\r\n    }\r\n\r\n    // uploadImage = async (uri, imageName) => {\r\n    //     const response = await fetch(uri);\r\n    //     const blob = await response.blob();\r\n    //     // const Http = new XMLHttpRequest();\r\n    //     // const url = 'https://127.0.0.1:8000/post';\r\n    //     // Http.open(\"POST\", url)\r\n    //     var ref = Firebase.storage().ref().child(\"images/\" + imageName);\r\n    //     return ref.put(blob);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Image source={{ uri: this.state.image_src }} style={{ width: 400, height: 400 }} />\r\n                <View style={styles.button}>\r\n                    <View style={styles.buttontext}>\r\n                        <Button style={styles.btndes} title=\"Capture\" onPress={this.onClickImagePress} />\r\n                    </View>\r\n                    <View style={styles.buttontext}>\r\n                        <Button title=\"Choose from Gallery\" onPress={this.onChooseImagePress} />\r\n                    </View>\r\n                    <View style={styles.buttontext}>\r\n                        <Button title='Logout' onPress={this.handleSignout} />\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // flex: 1,\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-around'\r\n    },\r\n    button: {\r\n        flexDirection: 'row',\r\n        padding: 10\r\n    },\r\n    buttontext: {\r\n        marginHorizontal: 10\r\n    }\r\n})\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}